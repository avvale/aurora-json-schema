{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Aurora Agile Framework",
    "description": "Make agile applications without technical debt",
    "type": "object",
    "properties": {
        "version": {
            "type": "string",
            "description": "Schema version",
            "default": "0.0.1"
        },
        "boundedContextName": {
            "type": "string",
            "description": "The name of the bounded context, singular in kebab-case"
        },
        "moduleName": {
            "type": "string",
            "description": "The name of the module, singular in kebab-case"
        },
        "moduleNames": {
            "type": "string",
            "description": "The name of the module, plural in kebab-case"
        },
        "aggregateName": {
            "type": "string",
            "description": "The name of the aggregateName, singular in PascalCase"
        },
        "hasOAuth": {
            "type": "boolean",
            "description": "Enabled authentication for this module",
            "default": false
        },
        "hasTenant": {
            "type": "boolean",
            "description": "Enabled tenant for this module",
            "default": false
        },
        "hasAuditing": {
            "type": "boolean",
            "description": "Enabled auditing for this module",
            "default": false
        },
        "aggregateProperties": {
            "type": "array",
            "items": {
                "additionalProperties": false,
                "allOf": [{ "$ref": "#/$defs/aggregateProperty" }],
                "properties": {
                    "name": true,
                    "type": true,
                    "length": true,
                    "maxLength": true,
                    "nullable": true,
                    "primaryKey": true,
                    "webComponent": {
                        "type": "object",
                        "description": "Web Component that wil be rendered for this property",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of web component",
                                "enum": [
                                    "grid-select-element",
                                    "grid-elements-manager",
                                    "select"
                                ]
                            },
                            "aggregateProperty": {
                                "additionalProperties": false,
                                "allOf": [{ "$ref": "#/$defs/aggregateProperty" }],
                                "properties": {
                                    "name": true,
                                    "type": true,
                                    "length": true,
                                    "maxLength": true,
                                    "nullable": true,
                                    "primaryKey": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "additionalApis": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/additionalApi"
            }
        }
    },
    "required": [
        "boundedContextName",
        "moduleName",
        "moduleNames",
        "aggregateName"
    ],
    "$defs": {
        "aggregateProperty": {
            "type": "object",
            "required": [ "name", "type" ],
            "additionalProperties": true,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of property, in camelCase"
                },
                "type": {
                    "type": "string",
                    "description": "The type of property",
                    "enum": [
                        "bigint.unsigned",
                        "bigint",
                        "blob.long",
                        "blob.medium",
                        "blob.tiny",
                        "blob",
                        "boolean",
                        "char",
                        "date",
                        "decimal",
                        "enum",
                        "float",
                        "id",
                        "int.unsigned",
                        "int",
                        "json",
                        "manyToMany",
                        "password",
                        "smallint.unsigned",
                        "smallint",
                        "text",
                        "timestamp",
                        "tinyint.unsigned",
                        "tinyint",
                        "varchar"
                    ]
                },
                "length": {
                    "type": "number",
                    "description": "Set max length to property"
                },
                "maxLength": {
                    "type": "number",
                    "description": "Set max length to property"
                },
                "nullable": {
                    "type": "boolean",
                    "description": "Set property to nullable"
                },
                "primaryKey": {
                    "type": "boolean",
                    "description": "Set property to primary key"
                }
            }
        },
        "additionalApi": {
            "type": "object",
            "required": [ "path", "resolverType", "httpMethod" ],
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Path to access api"
                },
                "resolverType": {
                    "type": "string",
                    "description": "Type of resolver, query or mutation",
                    "enum": [
                        "query",
                        "mutation"
                    ]
                },
                "httpMethod": {
                    "type": "string",
                    "description": "Verb of api rest",
                    "enum": [
                        "get",
                        "post",
                        "put",
                        "delete",
                        "patch"
                    ]
                }
            }
        }
    }
}